DIGEST 08c4435d19b274e7d93cfcbac9068238
FTactics
R612:615 Poly <> <> lib
prf 891:896 <> silly1
R918:920 Coq.Init.Datatypes <> nat ind
R934:943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R957:965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R971:973 Coq.Init.Logic <> :type_scope:x_'='_x not
R966:966 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R968:968 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R970:970 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R969:969 Tactics <> o var
R967:967 Tactics <> n var
R974:974 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R976:976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R978:978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R977:977 Tactics <> p var
R975:975 Tactics <> m var
R949:951 Coq.Init.Logic <> :type_scope:x_'='_x not
R944:944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R946:946 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R948:948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R947:947 Tactics <> o var
R945:945 Tactics <> n var
R952:952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R954:954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R956:956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R955:955 Tactics <> p var
R953:953 Tactics <> n var
R930:932 Coq.Init.Logic <> :type_scope:x_'='_x not
R929:929 Tactics <> n var
R933:933 Tactics <> m var
prf 1502:1507 <> silly2
R1529:1531 Coq.Init.Datatypes <> nat ind
R1545:1554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1555:1555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1598:1607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1613:1615 Coq.Init.Logic <> :type_scope:x_'='_x not
R1608:1608 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1610:1610 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1612:1612 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1611:1611 Tactics <> o var
R1609:1609 Tactics <> n var
R1616:1616 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1618:1618 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1620:1620 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1619:1619 Tactics <> p var
R1617:1617 Tactics <> m var
R1570:1572 Coq.Init.Datatypes <> nat ind
R1581:1584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1590:1592 Coq.Init.Logic <> :type_scope:x_'='_x not
R1585:1585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1587:1587 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1589:1589 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1588:1588 Tactics <> o var
R1586:1586 Tactics <> q var
R1593:1593 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1595:1595 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1597:1597 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1596:1596 Tactics <> p var
R1594:1594 Tactics <> r var
R1577:1579 Coq.Init.Logic <> :type_scope:x_'='_x not
R1576:1576 Tactics <> q var
R1580:1580 Tactics <> r var
R1541:1543 Coq.Init.Logic <> :type_scope:x_'='_x not
R1540:1540 Tactics <> n var
R1544:1544 Tactics <> m var
prf 2287:2293 <> silly2a
R2311:2313 Coq.Init.Datatypes <> nat ind
R2335:2344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2345:2345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2392:2401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2405:2407 Coq.Init.Logic <> :type_scope:x_'='_x not
R2402:2402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2404:2404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2403:2403 Tactics <> n var
R2408:2408 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2410:2410 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2409:2409 Tactics <> m var
R2360:2362 Coq.Init.Datatypes <> nat ind
R2379:2382 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2386:2388 Coq.Init.Logic <> :type_scope:x_'='_x not
R2383:2383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2385:2385 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2384:2384 Tactics <> q var
R2389:2389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2391:2391 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2390:2390 Tactics <> r var
R2371:2373 Coq.Init.Logic <> :type_scope:x_'='_x not
R2366:2366 Poly <> ::'('_x_','_x_')' not
R2368:2368 Poly <> ::'('_x_','_x_')' not
R2370:2370 Poly <> ::'('_x_','_x_')' not
R2367:2367 Tactics <> q var
R2369:2369 Tactics <> q var
R2374:2374 Poly <> ::'('_x_','_x_')' not
R2376:2376 Poly <> ::'('_x_','_x_')' not
R2378:2378 Poly <> ::'('_x_','_x_')' not
R2375:2375 Tactics <> r var
R2377:2377 Tactics <> r var
R2327:2329 Coq.Init.Logic <> :type_scope:x_'='_x not
R2322:2322 Poly <> ::'('_x_','_x_')' not
R2324:2324 Poly <> ::'('_x_','_x_')' not
R2326:2326 Poly <> ::'('_x_','_x_')' not
R2323:2323 Tactics <> n var
R2325:2325 Tactics <> n var
R2330:2330 Poly <> ::'('_x_','_x_')' not
R2332:2332 Poly <> ::'('_x_','_x_')' not
R2334:2334 Poly <> ::'('_x_','_x_')' not
R2331:2331 Tactics <> m var
R2333:2333 Tactics <> m var
prf 2593:2600 <> silly_ex
R2609:2609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2655:2664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2679:2687 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2694:2696 Coq.Init.Logic <> :type_scope:x_'='_x not
R2688:2691 Basics <> oddb def
R2697:2700 Basics <> true constr
R2672:2674 Coq.Init.Logic <> :type_scope:x_'='_x not
R2665:2669 Basics <> evenb def
R2675:2678 Basics <> true constr
R2634:2637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2648:2650 Coq.Init.Logic <> :type_scope:x_'='_x not
R2638:2641 Basics <> oddb def
R2644:2644 Coq.Init.Datatypes <> S constr
R2646:2646 Tactics <> n var
R2651:2654 Basics <> true constr
R2627:2629 Coq.Init.Logic <> :type_scope:x_'='_x not
R2620:2624 Basics <> evenb def
R2626:2626 Tactics <> n var
R2630:2633 Basics <> true constr
prf 2989:3003 <> silly3_firsttry
R3019:3021 Coq.Init.Datatypes <> nat ind
R3048:3057 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3077:3079 Coq.Init.Logic <> :type_scope:x_'='_x not
R3058:3064 Basics <> beq_nat def
R3067:3067 Coq.Init.Datatypes <> S constr
R3070:3070 Coq.Init.Datatypes <> S constr
R3072:3072 Tactics <> n var
R3080:3083 Basics <> true constr
R3034:3036 Coq.Init.Logic <> :type_scope:x_'='_x not
R3030:3033 Basics <> true constr
R3037:3043 Basics <> beq_nat def
R3045:3045 Tactics <> n var
prf 3632:3644 <> rev_exercise1
R3663:3666 Poly <> list ind
R3668:3670 Coq.Init.Datatypes <> nat ind
R3689:3697 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3700:3702 Coq.Init.Logic <> :type_scope:x_'='_x not
R3698:3699 Tactics <> l' var
R3703:3705 Poly <> rev def
R3707:3707 Tactics <> l var
R3680:3682 Coq.Init.Logic <> :type_scope:x_'='_x not
R3679:3679 Tactics <> l var
R3683:3685 Poly <> rev def
R3687:3688 Tactics <> l' var
R3768:3781 Poly <> rev_involutive thm
R3768:3781 Poly <> rev_involutive thm
def 4259:4274 <> trans_eq_example
R4300:4302 Coq.Init.Datatypes <> nat ind
R4324:4332 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4346:4354 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4360:4362 Coq.Init.Logic <> :type_scope:x_'='_x not
R4355:4355 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4357:4357 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4359:4359 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4358:4358 Tactics <> b var
R4356:4356 Tactics <> a var
R4363:4363 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4365:4365 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4367:4367 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4366:4366 Tactics <> f var
R4364:4364 Tactics <> e var
R4338:4340 Coq.Init.Logic <> :type_scope:x_'='_x not
R4333:4333 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4335:4335 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4337:4337 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4336:4336 Tactics <> d var
R4334:4334 Tactics <> c var
R4341:4341 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4343:4343 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4345:4345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4344:4344 Tactics <> f var
R4342:4342 Tactics <> e var
R4316:4318 Coq.Init.Logic <> :type_scope:x_'='_x not
R4311:4311 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4313:4313 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4315:4315 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4314:4314 Tactics <> b var
R4312:4312 Tactics <> a var
R4319:4319 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4321:4321 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4323:4323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4322:4322 Tactics <> d var
R4320:4320 Tactics <> c var
prf 4624:4631 <> trans_eq
R4660:4660 Tactics <> X var
R4671:4674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4680:4683 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4685:4687 Coq.Init.Logic <> :type_scope:x_'='_x not
R4684:4684 Tactics <> n var
R4688:4688 Tactics <> o var
R4676:4678 Coq.Init.Logic <> :type_scope:x_'='_x not
R4675:4675 Tactics <> m var
R4679:4679 Tactics <> o var
R4667:4669 Coq.Init.Logic <> :type_scope:x_'='_x not
R4666:4666 Tactics <> n var
R4670:4670 Tactics <> m var
def 4943:4959 <> trans_eq_example'
R4985:4987 Coq.Init.Datatypes <> nat ind
R5009:5017 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5031:5039 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5045:5047 Coq.Init.Logic <> :type_scope:x_'='_x not
R5040:5040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5042:5042 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5044:5044 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5043:5043 Tactics <> b var
R5041:5041 Tactics <> a var
R5048:5048 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5050:5050 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5052:5052 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5051:5051 Tactics <> f var
R5049:5049 Tactics <> e var
R5023:5025 Coq.Init.Logic <> :type_scope:x_'='_x not
R5018:5018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5020:5020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5022:5022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5021:5021 Tactics <> d var
R5019:5019 Tactics <> c var
R5026:5026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5028:5028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5030:5030 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5029:5029 Tactics <> f var
R5027:5027 Tactics <> e var
R5001:5003 Coq.Init.Logic <> :type_scope:x_'='_x not
R4996:4996 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4998:4998 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5000:5000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4999:4999 Tactics <> b var
R4997:4997 Tactics <> a var
R5004:5004 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5006:5006 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5008:5008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5007:5007 Tactics <> d var
R5005:5005 Tactics <> c var
R5523:5523 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5525:5525 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5527:5527 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5505:5512 Tactics <> trans_eq thm
R5523:5523 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5525:5525 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5527:5527 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5505:5512 Tactics <> trans_eq thm
def 5859:5875 <> trans_eq_exercise
R5897:5899 Coq.Init.Datatypes <> nat ind
R5924:5932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5944:5952 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5953:5953 Coq.Init.Logic <> :type_scope:x_'='_x not
R5959:5963 Coq.Init.Logic <> :type_scope:x_'='_x not
R5974:5974 Coq.Init.Logic <> :type_scope:x_'='_x not
R5955:5957 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5954:5954 Tactics <> n var
R5958:5958 Tactics <> p var
R5964:5971 Basics <> minustwo def
R5973:5973 Tactics <> o var
R5933:5933 Coq.Init.Logic <> :type_scope:x_'='_x not
R5939:5942 Coq.Init.Logic <> :type_scope:x_'='_x not
R5935:5937 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5934:5934 Tactics <> n var
R5938:5938 Tactics <> p var
R5943:5943 Tactics <> m var
R5909:5912 Coq.Init.Logic <> :type_scope:x_'='_x not
R5923:5923 Coq.Init.Logic <> :type_scope:x_'='_x not
R5908:5908 Tactics <> m var
R5913:5920 Basics <> minustwo def
R5922:5922 Tactics <> o var
R6018:6025 Tactics <> trans_eq thm
R6018:6025 Tactics <> trans_eq thm
prf 7555:7565 <> S_injective
R7583:7585 Coq.Init.Datatypes <> nat ind
R7600:7605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7607:7609 Coq.Init.Logic <> :type_scope:x_'='_x not
R7606:7606 Tactics <> n var
R7610:7610 Tactics <> m var
R7594:7596 Coq.Init.Logic <> :type_scope:x_'='_x not
R7591:7591 Coq.Init.Datatypes <> S constr
R7593:7593 Tactics <> n var
R7597:7597 Coq.Init.Datatypes <> S constr
R7599:7599 Tactics <> m var
prf 8105:8117 <> inversion_ex1
R8137:8139 Coq.Init.Datatypes <> nat ind
R8160:8165 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8169:8171 Coq.Init.Logic <> :type_scope:x_'='_x not
R8166:8166 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8168:8168 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8167:8167 Tactics <> n var
R8172:8172 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8174:8174 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8173:8173 Tactics <> m var
R8151:8153 Coq.Init.Logic <> :type_scope:x_'='_x not
R8145:8145 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8147:8148 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8150:8150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8149:8149 Tactics <> m var
R8146:8146 Tactics <> n var
R8154:8154 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8156:8157 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8159:8159 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8158:8158 Tactics <> o var
R8155:8155 Tactics <> o var
prf 8332:8344 <> inversion_ex2
R8362:8364 Coq.Init.Datatypes <> nat ind
R8379:8384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8386:8388 Coq.Init.Logic <> :type_scope:x_'='_x not
R8385:8385 Tactics <> n var
R8389:8389 Tactics <> m var
R8373:8375 Coq.Init.Logic <> :type_scope:x_'='_x not
R8370:8370 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8372:8372 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8371:8371 Tactics <> n var
R8376:8376 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8378:8378 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8377:8377 Tactics <> m var
def 8511:8523 <> inversion_ex3
R8554:8554 Tactics <> X var
R8564:8567 Poly <> list ind
R8569:8569 Tactics <> X var
R8595:8600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8616:8621 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8623:8625 Coq.Init.Logic <> :type_scope:x_'='_x not
R8622:8622 Tactics <> x var
R8626:8626 Tactics <> y var
R8607:8609 Coq.Init.Logic <> :type_scope:x_'='_x not
R8602:8605 Poly <> ::x_'::'_x not
R8601:8601 Tactics <> y var
R8606:8606 Tactics <> l var
R8611:8614 Poly <> ::x_'::'_x not
R8610:8610 Tactics <> x var
R8615:8615 Tactics <> j var
R8586:8588 Coq.Init.Logic <> :type_scope:x_'='_x not
R8576:8579 Poly <> ::x_'::'_x not
R8575:8575 Tactics <> x var
R8581:8584 Poly <> ::x_'::'_x not
R8580:8580 Tactics <> y var
R8585:8585 Tactics <> l var
R8590:8593 Poly <> ::x_'::'_x not
R8589:8589 Tactics <> z var
R8594:8594 Tactics <> j var
prf 8908:8918 <> beq_nat_0_l
R8953:8956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8958:8960 Coq.Init.Logic <> :type_scope:x_'='_x not
R8957:8957 Tactics <> n var
R8946:8948 Coq.Init.Logic <> :type_scope:x_'='_x not
R8935:8941 Basics <> beq_nat def
R8945:8945 Tactics <> n var
R8949:8952 Basics <> true constr
prf 9868:9880 <> inversion_ex4
R9896:9898 Coq.Init.Datatypes <> nat ind
R9911:9916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9922:9924 Coq.Init.Logic <> :type_scope:x_'='_x not
R9918:9920 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9907:9909 Coq.Init.Logic <> :type_scope:x_'='_x not
R9904:9904 Coq.Init.Datatypes <> S constr
R9906:9906 Tactics <> n var
R9910:9910 Coq.Init.Datatypes <> O constr
prf 9986:9998 <> inversion_ex5
R10016:10018 Coq.Init.Datatypes <> nat ind
R10036:10041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10045:10047 Coq.Init.Logic <> :type_scope:x_'='_x not
R10042:10042 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10044:10044 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10043:10043 Tactics <> n var
R10048:10048 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10050:10050 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10049:10049 Tactics <> m var
R10029:10031 Coq.Init.Logic <> :type_scope:x_'='_x not
R10024:10028 Basics <> false constr
R10032:10035 Basics <> true constr
def 10562:10574 <> inversion_ex6
R10631:10631 Tactics <> X var
R10641:10644 Poly <> list ind
R10646:10646 Tactics <> X var
R10668:10673 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10689:10694 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10696:10698 Coq.Init.Logic <> :type_scope:x_'='_x not
R10695:10695 Tactics <> x var
R10699:10699 Tactics <> z var
R10680:10682 Coq.Init.Logic <> :type_scope:x_'='_x not
R10675:10678 Poly <> ::x_'::'_x not
R10674:10674 Tactics <> y var
R10679:10679 Tactics <> l var
R10684:10687 Poly <> ::x_'::'_x not
R10683:10683 Tactics <> z var
R10688:10688 Tactics <> j var
R10663:10665 Coq.Init.Logic <> :type_scope:x_'='_x not
R10653:10656 Poly <> ::x_'::'_x not
R10652:10652 Tactics <> x var
R10658:10661 Poly <> ::x_'::'_x not
R10657:10657 Tactics <> y var
R10662:10662 Tactics <> l var
R10666:10667 Poly <> ::'['_']' not
prf 11874:11880 <> f_equal
R11909:11912 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11913:11913 Tactics <> B var
R11908:11908 Tactics <> A var
R11922:11922 Tactics <> A var
R11933:11936 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11940:11942 Coq.Init.Logic <> :type_scope:x_'='_x not
R11937:11937 Tactics <> f var
R11939:11939 Tactics <> x var
R11943:11943 Tactics <> f var
R11945:11945 Tactics <> y var
R11929:11931 Coq.Init.Logic <> :type_scope:x_'='_x not
R11928:11928 Tactics <> x var
R11932:11932 Tactics <> y var
prf 12448:12452 <> S_inj
R12470:12472 Coq.Init.Datatypes <> nat ind
R12480:12483 Basics <> bool ind
R12515:12524 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12536:12538 Coq.Init.Logic <> :type_scope:x_'='_x not
R12525:12531 Basics <> beq_nat def
R12535:12535 Tactics <> m var
R12533:12533 Tactics <> n var
R12539:12539 Tactics <> b var
R12511:12513 Coq.Init.Logic <> :type_scope:x_'='_x not
R12492:12498 Basics <> beq_nat def
R12507:12507 Coq.Init.Datatypes <> S constr
R12509:12509 Tactics <> m var
R12501:12501 Coq.Init.Datatypes <> S constr
R12503:12503 Tactics <> n var
R12514:12514 Tactics <> b var
prf 13377:13383 <> silly3'
R13399:13401 Coq.Init.Datatypes <> nat ind
R13407:13407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13456:13462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13481:13487 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13492:13494 Coq.Init.Logic <> :type_scope:x_'='_x not
R13488:13491 Basics <> true constr
R13495:13501 Basics <> beq_nat def
R13504:13504 Coq.Init.Datatypes <> S constr
R13507:13507 Coq.Init.Datatypes <> S constr
R13509:13509 Tactics <> n var
R13467:13469 Coq.Init.Logic <> :type_scope:x_'='_x not
R13463:13466 Basics <> true constr
R13470:13476 Basics <> beq_nat def
R13478:13478 Tactics <> n var
R13426:13429 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13449:13451 Coq.Init.Logic <> :type_scope:x_'='_x not
R13430:13436 Basics <> beq_nat def
R13439:13439 Coq.Init.Datatypes <> S constr
R13442:13442 Coq.Init.Datatypes <> S constr
R13444:13444 Tactics <> n var
R13452:13455 Basics <> true constr
R13419:13421 Coq.Init.Logic <> :type_scope:x_'='_x not
R13408:13414 Basics <> beq_nat def
R13416:13416 Tactics <> n var
R13422:13425 Basics <> true constr
prf 14391:14408 <> plus_n_n_injective
R14442:14450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14452:14454 Coq.Init.Logic <> :type_scope:x_'='_x not
R14451:14451 Tactics <> n var
R14455:14455 Tactics <> m var
R14434:14436 Coq.Init.Logic <> :type_scope:x_'='_x not
R14430:14432 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14429:14429 Tactics <> n var
R14433:14433 Tactics <> n var
R14438:14440 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14437:14437 Tactics <> m var
R14441:14441 Tactics <> m var
R14666:14674 Induction <> plus_n_Sm thm
R14666:14674 Induction <> plus_n_Sm thm
R14666:14674 Induction <> plus_n_Sm thm
R14699:14707 Induction <> plus_n_Sm thm
R14699:14707 Induction <> plus_n_Sm thm
R14699:14707 Induction <> plus_n_Sm thm
R14770:14776 Tactics <> f_equal thm
R14770:14776 Tactics <> f_equal thm
prf 15689:15711 <> double_injective_FAILED
R15751:15759 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15761:15763 Coq.Init.Logic <> :type_scope:x_'='_x not
R15760:15760 Tactics <> n var
R15764:15764 Tactics <> m var
R15740:15742 Coq.Init.Logic <> :type_scope:x_'='_x not
R15732:15737 Induction <> double def
R15739:15739 Tactics <> n var
R15743:15748 Induction <> double def
R15750:15750 Tactics <> m var
R16044:16050 Tactics <> f_equal thm
R16044:16050 Tactics <> f_equal thm
prf 18286:18301 <> double_injective
R18341:18349 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18351:18353 Coq.Init.Logic <> :type_scope:x_'='_x not
R18350:18350 Tactics <> n var
R18354:18354 Tactics <> m var
R18330:18332 Coq.Init.Logic <> :type_scope:x_'='_x not
R18322:18327 Induction <> double def
R18329:18329 Tactics <> n var
R18333:18338 Induction <> double def
R18340:18340 Tactics <> m var
R19227:19233 Tactics <> f_equal thm
R19227:19233 Tactics <> f_equal thm
prf 20134:20145 <> beq_nat_true
R20183:20186 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20188:20190 Coq.Init.Logic <> :type_scope:x_'='_x not
R20187:20187 Tactics <> n var
R20191:20191 Tactics <> m var
R20176:20178 Coq.Init.Logic <> :type_scope:x_'='_x not
R20165:20171 Basics <> beq_nat def
R20175:20175 Tactics <> m var
R20173:20173 Tactics <> n var
R20179:20182 Basics <> true constr
R20410:20416 Tactics <> f_equal thm
R20410:20416 Tactics <> f_equal thm
prf 21000:21028 <> double_injective_take2_FAILED
R21068:21076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21078:21080 Coq.Init.Logic <> :type_scope:x_'='_x not
R21077:21077 Tactics <> n var
R21081:21081 Tactics <> m var
R21057:21059 Coq.Init.Logic <> :type_scope:x_'='_x not
R21049:21054 Induction <> double def
R21056:21056 Tactics <> n var
R21060:21065 Induction <> double def
R21067:21067 Tactics <> m var
R21361:21367 Tactics <> f_equal thm
R21361:21367 Tactics <> f_equal thm
prf 22303:22324 <> double_injective_take2
R22364:22372 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22374:22376 Coq.Init.Logic <> :type_scope:x_'='_x not
R22373:22373 Tactics <> n var
R22377:22377 Tactics <> m var
R22353:22355 Coq.Init.Logic <> :type_scope:x_'='_x not
R22345:22350 Induction <> double def
R22352:22352 Tactics <> n var
R22356:22361 Induction <> double def
R22363:22363 Tactics <> m var
R22840:22846 Tactics <> f_equal thm
R22840:22846 Tactics <> f_equal thm
prf 25046:25056 <> beq_id_true
R25091:25094 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25096:25098 Coq.Init.Logic <> :type_scope:x_'='_x not
R25095:25095 Tactics <> x var
R25099:25099 Tactics <> y var
R25084:25086 Coq.Init.Logic <> :type_scope:x_'='_x not
R25074:25079 Lists <> beq_id def
R25083:25083 Tactics <> y var
R25081:25081 Tactics <> x var
R25087:25090 Basics <> true constr
R25160:25162 Coq.Init.Logic <> :type_scope:x_'='_x not
R25160:25162 Coq.Init.Logic <> :type_scope:x_'='_x not
R25175:25186 Tactics <> beq_nat_true thm
R25175:25186 Tactics <> beq_nat_true thm
prf 25344:25363 <> nth_error_after_last
R25378:25380 Coq.Init.Datatypes <> nat ind
R25399:25402 Poly <> list ind
R25404:25404 Tactics <> X var
R25425:25433 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25447:25449 Coq.Init.Logic <> :type_scope:x_'='_x not
R25434:25442 Poly <> nth_error def
R25446:25446 Tactics <> n var
R25444:25444 Tactics <> l var
R25450:25453 Poly <> None constr
R25421:25423 Coq.Init.Logic <> :type_scope:x_'='_x not
R25413:25418 Poly <> length def
R25420:25420 Tactics <> l var
R25424:25424 Tactics <> n var
def 26047:26052 <> square
R26060:26062 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26059:26059 Tactics <> n var
R26063:26063 Tactics <> n var
prf 26134:26144 <> square_mult
R26174:26176 Coq.Init.Logic <> :type_scope:x_'='_x not
R26160:26165 Tactics <> square def
R26169:26171 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26168:26168 Tactics <> n var
R26172:26172 Tactics <> m var
R26185:26187 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26177:26182 Tactics <> square def
R26184:26184 Tactics <> n var
R26188:26193 Tactics <> square def
R26195:26195 Tactics <> m var
R26512:26517 Tactics <> square def
R26842:26851 Induction <> mult_assoc thm
R26842:26851 Induction <> mult_assoc thm
R26842:26851 Induction <> mult_assoc thm
R26877:26879 Coq.Init.Logic <> :type_scope:x_'='_x not
R26873:26875 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26869:26871 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26885:26887 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26881:26883 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26877:26879 Coq.Init.Logic <> :type_scope:x_'='_x not
R26873:26875 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26869:26871 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26885:26887 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26881:26883 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26904:26912 Induction <> mult_comm thm
R26904:26912 Induction <> mult_comm thm
R26904:26912 Induction <> mult_comm thm
R26921:26930 Induction <> mult_assoc thm
R26921:26930 Induction <> mult_assoc thm
R26956:26965 Induction <> mult_assoc thm
R26956:26965 Induction <> mult_assoc thm
R26956:26965 Induction <> mult_assoc thm
def 27353:27355 <> foo
R27361:27363 Coq.Init.Datatypes <> nat ind
prf 27576:27587 <> silly_fact_1
R27610:27612 Coq.Init.Logic <> :type_scope:x_'='_x not
R27606:27608 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27601:27603 Tactics <> foo def
R27605:27605 Tactics <> m var
R27624:27626 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27613:27615 Tactics <> foo def
R27619:27621 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27618:27618 Tactics <> m var
def 27857:27859 <> bar
R27874:27874 Tactics <> x var
R27885:27885 Coq.Init.Datatypes <> O constr
R27896:27896 Coq.Init.Datatypes <> S constr
prf 27970:27988 <> silly_fact_2_FAILED
R28011:28013 Coq.Init.Logic <> :type_scope:x_'='_x not
R28007:28009 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28002:28004 Tactics <> bar def
R28006:28006 Tactics <> m var
R28025:28027 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28014:28016 Tactics <> bar def
R28020:28022 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28019:28019 Tactics <> m var
prf 29016:29027 <> silly_fact_2
R29050:29052 Coq.Init.Logic <> :type_scope:x_'='_x not
R29046:29048 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29041:29043 Tactics <> bar def
R29045:29045 Tactics <> m var
R29064:29066 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29053:29055 Tactics <> bar def
R29059:29061 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29058:29058 Tactics <> m var
prf 29414:29426 <> silly_fact_2'
R29449:29451 Coq.Init.Logic <> :type_scope:x_'='_x not
R29445:29447 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29440:29442 Tactics <> bar def
R29444:29444 Tactics <> m var
R29463:29465 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29452:29454 Tactics <> bar def
R29458:29460 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29457:29457 Tactics <> m var
R29497:29499 Tactics <> bar def
def 30143:30150 <> sillyfun
R30157:30159 Coq.Init.Datatypes <> nat ind
R30164:30167 Basics <> bool ind
R30177:30183 Basics <> beq_nat def
R30185:30185 Tactics <> n var
R30210:30216 Basics <> beq_nat def
R30218:30218 Tactics <> n var
R30240:30244 Basics <> false constr
R30227:30231 Basics <> false constr
R30194:30198 Basics <> false constr
prf 30256:30269 <> sillyfun_false
R30285:30287 Coq.Init.Datatypes <> nat ind
R30303:30305 Coq.Init.Logic <> :type_scope:x_'='_x not
R30293:30300 Tactics <> sillyfun def
R30302:30302 Tactics <> n var
R30306:30310 Basics <> false constr
R30339:30346 Tactics <> sillyfun def
R30361:30367 Basics <> beq_nat def
R30361:30367 Basics <> beq_nat def
R30461:30467 Basics <> beq_nat def
R30461:30467 Basics <> beq_nat def
prf 31266:31278 <> combine_split
R31298:31301 Poly <> list ind
R31305:31307 Poly <> :type_scope:x_'*'_x not
R31304:31304 Tactics <> X var
R31308:31308 Tactics <> Y var
R31339:31344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31358:31360 Coq.Init.Logic <> :type_scope:x_'='_x not
R31345:31351 Poly <> combine def
R31356:31357 Tactics <> l2 var
R31353:31354 Tactics <> l1 var
R31361:31361 Tactics <> l var
R31328:31330 Coq.Init.Logic <> :type_scope:x_'='_x not
R31321:31325 Poly <> split def
R31327:31327 Tactics <> l var
R31331:31331 Poly <> ::'('_x_','_x_')' not
R31334:31335 Poly <> ::'('_x_','_x_')' not
R31338:31338 Poly <> ::'('_x_','_x_')' not
R31332:31333 Tactics <> l1 var
R31336:31337 Tactics <> l2 var
R31448:31452 Poly <> split def
R31609:31613 Poly <> split def
R31609:31613 Poly <> split def
def 31902:31910 <> sillyfun1
R31917:31919 Coq.Init.Datatypes <> nat ind
R31924:31927 Basics <> bool ind
R31937:31943 Basics <> beq_nat def
R31945:31945 Tactics <> n var
R31969:31975 Basics <> beq_nat def
R31977:31977 Tactics <> n var
R31998:32002 Basics <> false constr
R31986:31989 Basics <> true constr
R31954:31957 Basics <> true constr
prf 32261:32280 <> sillyfun1_odd_FAILED
R32296:32298 Coq.Init.Datatypes <> nat ind
R32325:32333 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32340:32342 Coq.Init.Logic <> :type_scope:x_'='_x not
R32334:32337 Basics <> oddb def
R32339:32339 Tactics <> n var
R32343:32346 Basics <> true constr
R32318:32320 Coq.Init.Logic <> :type_scope:x_'='_x not
R32307:32315 Tactics <> sillyfun1 def
R32317:32317 Tactics <> n var
R32321:32324 Basics <> true constr
R32378:32386 Tactics <> sillyfun1 def
R32407:32413 Basics <> beq_nat def
R32407:32413 Basics <> beq_nat def
prf 33263:33275 <> sillyfun1_odd
R33291:33293 Coq.Init.Datatypes <> nat ind
R33320:33328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33335:33337 Coq.Init.Logic <> :type_scope:x_'='_x not
R33329:33332 Basics <> oddb def
R33334:33334 Tactics <> n var
R33338:33341 Basics <> true constr
R33313:33315 Coq.Init.Logic <> :type_scope:x_'='_x not
R33302:33310 Tactics <> sillyfun1 def
R33312:33312 Tactics <> n var
R33316:33319 Basics <> true constr
R33373:33381 Tactics <> sillyfun1 def
R33402:33408 Basics <> beq_nat def
R33402:33408 Basics <> beq_nat def
R33657:33668 Tactics <> beq_nat_true thm
R33657:33668 Tactics <> beq_nat_true thm
R33955:33961 Basics <> beq_nat def
R33955:33961 Basics <> beq_nat def
R34021:34032 Tactics <> beq_nat_true thm
R34021:34032 Tactics <> beq_nat_true thm
prf 34196:34217 <> bool_fn_applied_thrice
R34239:34242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34243:34246 Basics <> bool ind
R34235:34238 Basics <> bool ind
R34254:34257 Basics <> bool ind
R34274:34276 Coq.Init.Logic <> :type_scope:x_'='_x not
R34263:34263 Tactics <> f var
R34266:34266 Tactics <> f var
R34269:34269 Tactics <> f var
R34271:34271 Tactics <> b var
R34277:34277 Tactics <> f var
R34279:34279 Tactics <> b var
R34320:34323 Basics <> true constr
R34320:34323 Basics <> true constr
R34386:34390 Basics <> false constr
R34386:34390 Basics <> false constr
R34456:34460 Basics <> false constr
R34456:34460 Basics <> false constr
R34490:34493 Basics <> true constr
R34490:34493 Basics <> true constr
prf 36852:36862 <> beq_nat_sym
R36880:36882 Coq.Init.Datatypes <> nat ind
R36899:36901 Coq.Init.Logic <> :type_scope:x_'='_x not
R36888:36894 Basics <> beq_nat def
R36898:36898 Tactics <> m var
R36896:36896 Tactics <> n var
R36902:36908 Basics <> beq_nat def
R36912:36912 Tactics <> n var
R36910:36910 Tactics <> m var
prf 37482:37494 <> beq_nat_trans
R37532:37537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37556:37561 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37573:37575 Coq.Init.Logic <> :type_scope:x_'='_x not
R37562:37568 Basics <> beq_nat def
R37572:37572 Tactics <> p var
R37570:37570 Tactics <> n var
R37576:37579 Basics <> true constr
R37549:37551 Coq.Init.Logic <> :type_scope:x_'='_x not
R37538:37544 Basics <> beq_nat def
R37548:37548 Tactics <> p var
R37546:37546 Tactics <> m var
R37552:37555 Basics <> true constr
R37525:37527 Coq.Init.Logic <> :type_scope:x_'='_x not
R37514:37520 Basics <> beq_nat def
R37524:37524 Tactics <> m var
R37522:37522 Tactics <> n var
R37528:37531 Basics <> true constr
R37621:37632 Tactics <> beq_nat_true thm
R37621:37632 Tactics <> beq_nat_true thm
R37650:37661 Tactics <> beq_nat_true thm
R37650:37661 Tactics <> beq_nat_true thm
R37732:37743 Induction <> beq_nat_refl thm
R37732:37743 Induction <> beq_nat_refl thm
prf 38455:38466 <> length_O_nil
R38484:38487 Poly <> list ind
R38489:38489 Tactics <> X var
R38505:38508 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38510:38512 Coq.Init.Logic <> :type_scope:x_'='_x not
R38509:38509 Tactics <> l var
R38513:38515 Poly <> nil constr
R38501:38503 Coq.Init.Logic <> :type_scope:x_'='_x not
R38493:38498 Poly <> length def
R38500:38500 Tactics <> l var
def 38618:38640 <> split_combine_statement
R38759:38762 Poly <> list ind
R38766:38768 Poly <> :type_scope:x_'*'_x not
R38765:38765 Tactics <> X var
R38769:38769 Tactics <> Y var
R38779:38782 Poly <> list ind
R38784:38784 Tactics <> X var
R38793:38796 Poly <> list ind
R38798:38798 Tactics <> Y var
R38827:38834 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38852:38859 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38867:38869 Coq.Init.Logic <> :type_scope:x_'='_x not
R38860:38864 Poly <> split def
R38866:38866 Tactics <> l var
R38870:38870 Poly <> ::'('_x_','_x_')' not
R38873:38874 Poly <> ::'('_x_','_x_')' not
R38877:38877 Poly <> ::'('_x_','_x_')' not
R38871:38872 Tactics <> l1 var
R38875:38876 Tactics <> l2 var
R38848:38850 Coq.Init.Logic <> :type_scope:x_'='_x not
R38835:38841 Poly <> combine def
R38846:38847 Tactics <> l2 var
R38843:38844 Tactics <> l1 var
R38851:38851 Tactics <> l var
R38815:38817 Coq.Init.Logic <> :type_scope:x_'='_x not
R38806:38811 Poly <> length def
R38813:38814 Tactics <> l1 var
R38818:38823 Poly <> length def
R38825:38826 Tactics <> l2 var
prf 38889:38901 <> split_combine
R38905:38927 Tactics <> split_combine_statement def
R39094:39105 Tactics <> length_O_nil thm
R39094:39105 Tactics <> length_O_nil thm
prf 39711:39725 <> filter_exercise
R39756:39759 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39760:39763 Basics <> bool ind
R39755:39755 Tactics <> X var
R39800:39800 Tactics <> X var
R39811:39814 Poly <> list ind
R39816:39816 Tactics <> X var
R39848:39856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39863:39865 Coq.Init.Logic <> :type_scope:x_'='_x not
R39857:39860 Tactics <> test var
R39862:39862 Tactics <> x var
R39866:39869 Basics <> true constr
R39838:39840 Coq.Init.Logic <> :type_scope:x_'='_x not
R39825:39830 Poly <> filter def
R39837:39837 Tactics <> l var
R39832:39835 Tactics <> test var
R39842:39845 Poly <> ::x_'::'_x not
R39841:39841 Tactics <> x var
R39846:39847 Tactics <> lf var
def 41072:41078 <> forallb
R41100:41103 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41104:41107 Basics <> bool ind
R41099:41099 Tactics <> X var
R41115:41118 Poly <> list ind
R41120:41120 Tactics <> X var
R41136:41139 Basics <> bool ind
R41152:41152 Tactics <> l var
R41163:41165 Poly <> nil constr
R41170:41173 Basics <> true constr
R41180:41183 Poly <> ::x_'::'_x not
R41190:41193 Basics <> andb def
R41205:41211 Tactics <> forallb def
R41213:41216 Tactics <> pred var
R41196:41199 Tactics <> pred var
def 41238:41245 <> forallb1
R41273:41275 Coq.Init.Logic <> :type_scope:x_'='_x not
R41249:41255 Tactics <> forallb def
R41262:41262 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41264:41264 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41266:41266 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41268:41268 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41270:41270 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41272:41272 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41257:41260 Basics <> oddb def
R41276:41279 Basics <> true constr
def 41323:41330 <> forallb2
R41360:41362 Coq.Init.Logic <> :type_scope:x_'='_x not
R41334:41340 Tactics <> forallb def
R41347:41347 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41353:41353 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41359:41359 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41354:41358 Basics <> false constr
R41348:41352 Basics <> false constr
R41342:41345 Basics <> negb def
R41363:41366 Basics <> true constr
def 41410:41417 <> forallb3
R41444:41446 Coq.Init.Logic <> :type_scope:x_'='_x not
R41421:41427 Tactics <> forallb def
R41435:41435 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41437:41437 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41439:41439 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41441:41441 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41443:41443 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41429:41433 Basics <> evenb def
R41447:41451 Basics <> false constr
def 41495:41502 <> forallb4
R41528:41530 Coq.Init.Logic <> :type_scope:x_'='_x not
R41506:41512 Tactics <> forallb def
R41526:41527 Poly <> ::'['_']' not
R41515:41521 Basics <> beq_nat def
R41531:41534 Basics <> true constr
def 41580:41586 <> existsb
R41608:41611 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41612:41615 Basics <> bool ind
R41607:41607 Tactics <> X var
R41623:41626 Poly <> list ind
R41628:41628 Tactics <> X var
R41644:41647 Basics <> bool ind
R41660:41660 Tactics <> l var
R41671:41673 Poly <> nil constr
R41678:41682 Basics <> false constr
R41689:41692 Poly <> ::x_'::'_x not
R41699:41701 Basics <> orb def
R41713:41719 Tactics <> existsb def
R41721:41724 Tactics <> pred var
R41704:41707 Tactics <> pred var
def 41746:41753 <> existsb1
R41786:41788 Coq.Init.Logic <> :type_scope:x_'='_x not
R41757:41763 Tactics <> existsb def
R41777:41777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41779:41779 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41781:41781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41783:41783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41785:41785 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41766:41772 Basics <> beq_nat def
R41789:41793 Basics <> false constr
def 41837:41844 <> existsb2
R41885:41887 Coq.Init.Logic <> :type_scope:x_'='_x not
R41848:41854 Tactics <> existsb def
R41868:41868 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41873:41873 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41878:41878 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41884:41884 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41879:41883 Basics <> false constr
R41874:41877 Basics <> true constr
R41869:41872 Basics <> true constr
R41857:41860 Basics <> andb def
R41862:41865 Basics <> true constr
R41888:41891 Basics <> true constr
def 41935:41942 <> existsb3
R41972:41974 Coq.Init.Logic <> :type_scope:x_'='_x not
R41946:41952 Tactics <> existsb def
R41959:41959 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41961:41961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41963:41963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41965:41965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41967:41967 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41969:41969 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41971:41971 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R41954:41957 Basics <> oddb def
R41975:41978 Basics <> true constr
def 42022:42029 <> existsb4
R42049:42051 Coq.Init.Logic <> :type_scope:x_'='_x not
R42033:42039 Tactics <> existsb def
R42047:42048 Poly <> ::'['_']' not
R42041:42045 Basics <> evenb def
R42052:42056 Basics <> false constr
def 42104:42111 <> existsb'
R42133:42136 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42137:42140 Basics <> bool ind
R42132:42132 Tactics <> X var
R42148:42151 Poly <> list ind
R42153:42153 Tactics <> X var
R42158:42161 Basics <> bool ind
R42168:42171 Basics <> negb def
R42174:42180 Tactics <> forallb def
R42207:42207 Tactics <> l var
R42192:42195 Basics <> negb def
R42198:42201 Tactics <> pred var
R42203:42203 Tactics <> x var
def 42220:42228 <> existsb'1
R42261:42263 Coq.Init.Logic <> :type_scope:x_'='_x not
R42232:42238 Tactics <> existsb def
R42252:42252 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42254:42254 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42256:42256 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42258:42258 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42260:42260 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42241:42247 Basics <> beq_nat def
R42264:42268 Basics <> false constr
def 42312:42320 <> existsb'2
R42361:42363 Coq.Init.Logic <> :type_scope:x_'='_x not
R42324:42330 Tactics <> existsb def
R42344:42344 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42349:42349 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42354:42354 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42360:42360 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42355:42359 Basics <> false constr
R42350:42353 Basics <> true constr
R42345:42348 Basics <> true constr
R42333:42336 Basics <> andb def
R42338:42341 Basics <> true constr
R42364:42367 Basics <> true constr
def 42411:42419 <> existsb'3
R42449:42451 Coq.Init.Logic <> :type_scope:x_'='_x not
R42423:42429 Tactics <> existsb def
R42436:42436 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42438:42438 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42440:42440 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42442:42442 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42444:42444 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42446:42446 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42448:42448 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42431:42434 Basics <> oddb def
R42452:42455 Basics <> true constr
def 42499:42507 <> existsb'4
R42527:42529 Coq.Init.Logic <> :type_scope:x_'='_x not
R42511:42517 Tactics <> existsb def
R42525:42526 Poly <> ::'['_']' not
R42519:42523 Basics <> evenb def
R42530:42534 Basics <> false constr
prf 42578:42599 <> existsb_existsb'_equiv
R42630:42633 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42634:42637 Basics <> bool ind
R42629:42629 Tactics <> X var
R42645:42648 Poly <> list ind
R42650:42650 Tactics <> X var
R42672:42674 Coq.Init.Logic <> :type_scope:x_'='_x not
R42658:42664 Tactics <> existsb def
R42671:42671 Tactics <> l var
R42666:42669 Tactics <> pred var
R42675:42682 Tactics <> existsb' def
R42689:42689 Tactics <> l var
R42684:42687 Tactics <> pred var
R42791:42798 Tactics <> existsb' def
